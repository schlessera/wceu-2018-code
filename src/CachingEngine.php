<?php declare( strict_types=1 );

namespace WordCampEurope\Workshop;

/**
 * Abstract caching engine.
 *
 * It provides two abstract methods for reading and writing to the cache.
 *
 * Pattern: Template Method
 *
 * @see http://designpatternsphp.readthedocs.io/en/latest/Behavioral/TemplateMethod/README.html
 */
abstract class CachingEngine {

	/**
	 * Remember a given value that can be generated by a callback.
	 *
	 * @param string   $key        Identifier under which to remember the
	 *                             value.
	 * @param callable $callback   Callback that generates the value that
	 *                             should be remembered.
	 * @param int      $expiration Expiration time in seconds.
	 *
	 * @return mixed Value to be remembered.
	 */
	public function remember( string $key, callable $callback, $expiration ) {
		$value = $this->read( $key );

		if ( false === $value ) {
			$value = $callback();
			$this->write( $key, $value, $expiration );
		}

		return $value;
	}

	/**
	 * Read operation on the cache.
	 *
	 * @param string $key Identifier under which to remember the value.
	 *
	 * @return mixed Value of the cache.
	 */
	abstract public function read( string $key );

	/**
	 * Write operation on the cache.
	 *
	 * @param string $key        Identifier under which to remember the value.
	 * @param mixed  $value      Value to write to the cache.
	 * @param int    $expiration Expiration time in seconds.
	 */
	abstract public function write( string $key, $value, int $expiration );
}
